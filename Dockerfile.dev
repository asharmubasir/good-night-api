# Development Dockerfile
# Optimized for development workflow with fast rebuilds and all gems

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version
ARG RUBY_VERSION=3.4.3
FROM docker.io/library/ruby:$RUBY_VERSION-slim

# Rails app lives here
WORKDIR /rails

# Install base packages + development tools
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    curl \
    libjemalloc2 \
    libvips \
    postgresql-client \
    build-essential \
    git \
    libpq-dev \
    libyaml-dev \
    pkg-config \
    vim \
    && rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Set development environment
ENV RAILS_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_JOBS=20

# Configure bundle for development (install ALL gems)
RUN bundle config set --global without '' && \
    bundle config set --global deployment 'false'

# Copy gem files first for better Docker layer caching
COPY Gemfile Gemfile.lock ./

# Install all gems (including development and test gems)
RUN bundle install --retry 5

# Copy application code (this layer changes frequently during development)
COPY . .

# Create directories that Rails expects
RUN mkdir -p log tmp/pids tmp/cache tmp/sockets storage

# Expose port for development server
EXPOSE 80

# Default command for development
CMD ["bundle", "exec", "rails", "server", "-p", "80", "-b", "0.0.0.0"]
